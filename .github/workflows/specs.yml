name: Run Rspec, Rubocop, and Brakeman

on: [push]

env:
  RAILS_ENV: test
  DATABASE_URL: postgres://postgres:@localhost:5432

jobs:
  rspec:
    name: Run Rspec

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ''
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '16.20.1'

      - name: Set up ruby gem cache
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Install yarn
        run: npm install yarn -g

      - name: Yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set up yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install node.js dependencies
        run: yarn install

      - name: Create screenshots directory
        run: mkdir -p tmp/capybara

      - name: Set up test database
        run: bin/rails parallel:setup

      - name: Checkout wiki code
        uses: actions/checkout@v3
        with:
          repository: ${{github.repository}}.wiki
          path: markdown

      - name: Run tests
        run: bundle exec rake parallel:spec

      - name: Push screenshots to repo Wiki
        if: failure()
        run: |
          rm -rf "markdown/capybara-screenshots/$GITHUB_REF_NAME"
          mkdir -p "markdown/capybara-screenshots/$GITHUB_REF_NAME"
          cp tmp/capybara/*.png "markdown/capybara-screenshots/$GITHUB_REF_NAME/"
          cd markdown
          ruby generate-screenshots-list.rb
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add "capybara-screenshots/$GITHUB_REF_NAME/*"
          git diff-index --quiet HEAD || git commit -m "Update screenshots for pr ${{ github.event.number }}" && git push

      - name: Remove screenshots from wiki repo
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd markdown
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git rm -r --ignore-unmatch "capybara-screenshots/$GITHUB_REF_NAME"
          git diff-index --quiet HEAD || git commit -m "Remove screenshots for pr ${{ github.event.number }}" && git push

  linting:
    name: Run Rubocop

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '16.20.1'

      - name: Set up ruby gem cache
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run rubocop
        run: bundle exec rubocop --format clang --parallel
  brakeman:
    name: Run Brakeman

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '16.20.1'

      - name: Set up ruby gem cache
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run brakeman
        run: bundle exec brakeman
