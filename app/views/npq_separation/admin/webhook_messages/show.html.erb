<% content_for :before_content do %>
  <%= render GovukComponent::BackLinkComponent.new(
    text: "Back",
    href: npq_separation_admin_webhook_messages_path
  ) %>
<% end %>

<h1 class="govuk-heading-l"><%= title ||= t(".title") %></h1>

<% if @webhook_message.retryable? %>
  <%=
    link_to("Queue retry", npq_separation_admin_webhook_message_processing_jobs_path(webhook_message_id: @webhook_message.id), class: "govuk-button", method: :post)
  %>
<% end %>

<%=
  govuk_summary_list do |sl|
    sl.with_row do |row|
      row.with_key(text: t('.message_id'))
      row.with_value(text: @webhook_message.message_id)
    end

    sl.with_row do |row|
      row.with_key(text: t('.message_type'))
      row.with_value(text: @webhook_message.message_type)
    end

    sl.with_row do |row|
      row.with_key(text: t('.status'))
      row.with_value(text: webhook_message_status_tag(@webhook_message))
    end

    if @webhook_message.status_comment.present?
      sl.with_row do |row|
        row.with_key(text: t('.status_comment'))
        row.with_value(text: @webhook_message.status_comment)
      end
    end

    sl.with_row do |row|
      row.with_key(text: t('.sent_at'))
      row.with_value(text: @webhook_message.sent_at.to_fs(:govuk_short))
    end

    sl.with_row do |row|
      row.with_key(text: t('.created_at'))
      row.with_value(text: @webhook_message.created_at.to_fs(:govuk_short))
    end

    sl.with_row do |row|
      row.with_key(text: t('.processed_at'))
      row.with_value(text: @webhook_message.processed_at&.to_fs(:govuk_short) || "-")
    end

    sl.with_row do |row|
      row.with_key(text: t('.message'))
      row.with_value(text: pre_tagged_pretty_json(@webhook_message.message))
    end
  end
%>

