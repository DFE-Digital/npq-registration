<% if request.path =~ /reviews/ %>
  <%= render "npq_separation/admin/applications/reviews/application_side_navigation" %>
<% else %>
  <%= render "npq_separation/admin/applications/application_side_navigation" %>
<% end %>

<h1 class="govuk-heading-l">Application history</h1>
<h2 class="govuk-heading-m govuk-!-margin-bottom-2"><%= @application.user.full_name %></h2>

<p class="govuk-body govuk-!-margin-bottom-2">
  <strong>User ID:</strong>
  <%= @application.user.ecf_id %>
</p>

<p class="govuk-body govuk-!-margin-bottom-2">
  <strong>Email:</strong>
  <%= @application.user.email %>
</p>

<p class="govuk-body govuk-!-margin-bottom-2">
  <strong>TRN:</strong>
  <%= @application.user.trn %>
  <%= trn_verified_badge(@application.user) %>
</p>

<br>

<%=
  render(NpqSeparation::Admin::HistoryComponent.new(record: @application) do |application, version_created_at, object_changes|
    if object_changes["training_status"].present?
      # reason = ApplicationState.lookup_reason(application:, created_at: version_created_at, state: object_changes["training_status"].last)
      reason = @application.lookup_state_change_reason(changed_at: version_created_at, changed_status: object_changes["training_status"].last)
    end
    "Reason for training status change: #{reason}" if reason
  end)
%>
