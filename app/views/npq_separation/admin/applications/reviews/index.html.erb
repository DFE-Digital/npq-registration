<% content_for :side_navigation do %>
  <%=
    render NpqSeparation::SubNavigationComponent.new(
      request.path,
      structure:
        [
          NpqSeparation::NavigationStructure::Node.new(
            name: "All applications",
            href: npq_separation_admin_applications_path,
            prefix: /\/npq-separation\/admin\/applications(?!\/reviews)$/,
            ),
          NpqSeparation::NavigationStructure::Node.new(
            name: "In review",
            href: npq_separation_admin_application_reviews_path,
            prefix: /\/npq-separation\/admin\/applications\/reviews$/,
            ),
        ]
    )
  %>
<% end %>

<h1 class="govuk-heading-l">Registrations in review</h1>

<div class="admin-search-box">
  <h2 class="govuk-heading-m">Find a registration</h2>

  <%= form_with method: :get do |f| %>
    <div class="govuk-grid-row">
      <%= f.govuk_text_field(
          :q,
          value: params[:q],
          label: { text: "Enter the User ID, name, email address, employer name, or application ID", size: "s" },
          form_group: { class: "govuk-grid-column-full" },
        )
      %>
    </div>

    <div class="govuk-grid-row">
      <%=
        f.govuk_select(
          :review_status,
          options_for_select(
            Application.review_statuses.keys.unshift(""),
            params[:review_status],
          ),
          label: { text: "Review status", size: "s" },
          form_group: { class: "govuk-grid-column-one-half" },
          include_blank: true,
        )
      %>

      <%=
        f.govuk_select(
          :employment_type,
          options_for_select(employment_types.map { [_1.humanize, _1] }.prepend(nil), params[:employment_type]),
          label: { text: "Employment type", size: "s" },
          form_group: { class: "govuk-grid-column-one-half" },
        )
      %>
    </div>

    <div class="govuk-grid-row">
      <%=
        f.govuk_select(
          :eligible_for_funding,
          options_for_select([
            ['', nil],
            ['Yes', true],
            ['No', false],
          ], params[:eligible_for_funding]),
          label: { text: "Eligible for funding", size: "s" },
          form_group: { class: "govuk-grid-column-one-half" },
        )
      %>

      <%=
        f.govuk_select(
          :referred_by_return_to_teaching_adviser,
          options_for_select([
            ['', nil],
            ['Yes', 'yes'],
            ['No', 'no'],
          ], params[:referred_by_return_to_teaching_adviser]),
          label: { text: "Referred by return to teaching adviser", size: "s" },
          form_group: { class: "govuk-grid-column-one-half" },
        )
      %>
    </div>

    <div class="govuk-grid-row">
      <%=
        f.govuk_check_boxes_fieldset(nil,
                                     legend: nil,
                                     form_group: { class: "govuk-grid-column-one-half" },
                                    ) do
          f.govuk_check_box(
            :has_funding_decision, "", true,
            multiple: false,
            label: { text: "Show registrations without a funding decision" },
            checked: params[:has_funding_decision].blank?,
          )
        end
      %>

      <%=
        f.govuk_collection_select(
          :cohort_id,
          Cohort.all.order(start_year: :desc),
          :id,
          -> { format_cohort _1 },
          options: { selected: params[:cohort_id], include_blank: true },
          label: { text: "Year of registration", size: "s" },
          form_group: { class: "govuk-grid-column-one-half" },
        )
      %>
    </div>

    <%= f.govuk_submit "Search" %>
  <% end %>
</div>

<%=
  govuk_table do |table|
    table.with_head do |header|
      header.with_row do |row|
        row.with_cell(text: "Submitted")
        row.with_cell(text: "Name")
        row.with_cell(text: "Review Status")
        row.with_cell(text: "Eligible for funding")
        row.with_cell(text: "Provider approval status")
        row.with_cell(text: "Notes", classes: 'govuk-!-width-one-third')
        row.with_cell(text: "Actions")
      end
    end

    table.with_body do |body|
      @applications.each do |application|
        body.with_row do |row|
          row.with_cell(text: application.created_at.to_formatted_s(:govuk_short))
          row.with_cell do
            concat govuk_link_to(application.user.full_name, npq_separation_admin_user_path(application.user))
            concat tag.p(application.employment_type.try(:humanize), class: 'govuk-body-s govuk-!-margin-top-1 govuk-!-margin-bottom-1')
            concat tag.p(application.employer_name_to_display, class: 'govuk-body-s govuk-!-margin-top-1 govuk-!-margin-bottom-1')
          end
          row.with_cell { review_status_tag(application.review_status) }
          row.with_cell(text: boolean_red_green_tag(application.eligible_for_funding))
          row.with_cell(text: lead_provider_approval_status_badge(application.lead_provider_approval_status))
          row.with_cell(text: application.notes)
          row.with_cell(text: govuk_link_to("View", npq_separation_admin_application_review_path(application.id)))
        end
      end
    end
  end
%>

<%= govuk_pagination(pagy: @pagy) %>
