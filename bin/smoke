#!/usr/bin/env bash

url=$1
if [[ -z $url ]]; then
  echo `date`" - smoke test failed (URL is missing)"
  exit 1
fi

current_commit_sha=\"$2\"
if [[ -z $current_commit_sha ]]; then
  echo `date`" - smoke test failed (head sha is missing)"
  exit 1
fi

# max_retries=10

# for ((i=1; i<=max_retries; i++)); do
#   response=$(curl -sL $url/healthcheck)
#   response_sha=$(jq ".git_commit_sha" <<< $response)
  
#   if [[ $response_sha == $current_commit_sha ]]; then
#     echo "✅ Correct version deployed"
#     break
#   fi

#   if [[ $i -eq $max_retries ]]; then
#     echo "Fail: healthcheck sha is $response_sha but current commit is $current_commit_sha"
#     exit 1
#   fi

#   sleep 1 # Wait for 1 second before retrying
# done

response_migration=$(jq ".database.migration_version" <<< $response)
latest_migration=$(ls db/migrate/ | cut -d "_" -f1 | sort -nr | head -n1)

if [[ $response_migration == $latest_migration ]]; then
  echo "✅ Correct database migration version"
else
  echo "Fail: healthcheck migration version is $response_migration but latest is $latest_migration"
  exit 1
fi

database_connected=$(jq ".database.connected" <<< $response)

if [[ $database_connected == 'true' ]]; then
  echo "✅ Database is connected"
else
  echo "Fail: database is not connected"
  exit 1
fi

database_poplulated=$(jq ".database.populated" <<< $response)

if [[ $database_poplulated == 'true' ]]; then
  echo "✅ Database is populated"
else
  echo "Fail: database is not populated"
  exit 1
fi

html_page_response=$(curl -sL --fail $url/)
if [[ -n $html_page_response ]]; then
  echo "✅ HTML response is successful"
else
  echo "Fail: HTML response is unsuccessful"
  exit 1
fi
